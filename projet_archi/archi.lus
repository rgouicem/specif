const NPROCS: int=1;
const MEMSIZE: int = 2;
const WORDSIZE: int = 1;
type b_wires: bool ^ (MEMSIZE+3);
const AD: int=0;
const CTRL: int=1;
const VALID: int=2;
const DT: int=3;

node memory (arb_gnt: bool; b_out: b_wires) returns (b_in_mem: b_wires);
var mem: bool ^ (MEMSIZE*WORDSIZE);
let
  
tel

node proc (op, valid, gel: bool; val: bool ^ WORDSIZE; ad: int) returns (op_out, valid_out: bool; val_out: bool ^ WORDSIZE; ad_out: int);
let

tel

node bcu (req: bool ^ NPROCS) returns (arb_gnt: int);
let

tel

node bus (b_in: b_wires ^ ((NPROCS+1)) returns (b_out: b_wires);
let

tel

node cache (op, valid, gnt: bool; val: bool ^ WORDSIZE; ad: int; b_out: b_wires) returns (gel, b_req: bool; b_in: b_wires);
let
  
tel

node main () returns ();
let
  
tel